version: '3.8'

services:

  # db
#  mysql:
#    image: mysql:8.1
#    ports:
#      - 3306:3306
#    environment:
#      TZ: UTC
#      MYSQL_ROOT_PASSWORD: cheolcheol

  postgresql:
      image: postgres:16
#      volumes:
#        - postgre:/var/lib/postgresql/data
      ports:
        - 5432:5432
      environment:
        TZ: UTC
        POSTGRES_PASSWORD: cheolcheol

  mongo1:
    image: mongo:6
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    container_name: mongo1
    ports:
      - 27017:27017
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017',priority:1},{_id:1,host:'host.docker.internal:27018',priority:0.5},{_id:2,host:'host.docker.internal:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30

  mongo2:
    image: mongo:6
    container_name: mongo2
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27018:27017
    extra_hosts:
      - "host.docker.internal:host-gateway"

  mongo3:
    image: mongo:6
    container_name: mongo3
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27019:27017
    extra_hosts:
      - "host.docker.internal:host-gateway"

